<cfcomponent output="false" accessors="true">
	
	<cfproperty name="baseURL" default="http://developer.echonest.com/api/v4/" />
	<cfproperty name="APIKey" default="5NFWO3Z5PXELC3M0O" />
	
	<cffunction access="public" name="init" returntype="any">
		<cfargument name="sAPIKey" type="string" default="5NFWO3Z5PXELC3M0O" />
		
		<cfset setAPIKey( arguments.sAPIKey ) />
		
		<cfreturn this />
	</cffunction>
	
	<cffunction access="public" name="getSimilarArtists" returntype="struct" output="false">
		<cfargument name="sArtistIDs" type="string" required="true" />
		
		<cfset local.sIDS = 'musicbrainz:artist:a74b1b7f-71a5-4011-9441-d0b5e4122711' />
		
		<cfreturn performAPICall( sMethod = 'artist/similar', stParams = {
			'id' 		= local.sIDS,
			'bucket' 	= 'id:musicbrainz'
			} ) />
		
	</cffunction>
	
	<cffunction access="public" name="identifyTrack" returntype="struct" output="false"
			hint="Take the result of the fingerprinting and check which track this is">
		<cfargument name="sCode" type="string" required="true"
			hint="The code generated by the fingerprinting service" />
			
		<cfreturn performAPICall( sMethod = 'song/identify', stParams = {
			'code' 	= arguments.sCode
			} ) />

	</cffunction>
	
	<cffunction access="public" name="performAPICall" returntype="struct" output="false"
			hint="Perform a call to the API">
		<cfargument name="sMethod" type="string" required="true"
			hint="Full method string to call, e.g. artist/similar" />
		<cfargument name="stParams" type="struct" required="true"
			hint="Parameters to append" />
			
		<cfset local.stReturn = application.udf.GenerateReturnStruct() />
		<cfset local.sURL = getbaseURL() & arguments.sMethod & '?api_key=' & UrlEncodedFormat( getAPIKey() ) & '&format=json' />
		
		<cfloop list="#StructKeyList( arguments.stParams )#" index="local.sItem">
			<cfset local.sURL = listAppend( local.sURL, local.sItem & '=' & UrlEncodedFormat( arguments.stParams[ local.sItem ] ), '&') />
		</cfloop>
		
		<cfset local.stReturn.sURL = local.sURL />
		
		<cftry>
		<cfhttp charset="utf-8" url="#local.sURL#" result="local.stHTTP"></cfhttp>
			<cfcatch type="any">
				<cfrethrow />
			</cfcatch>
		</cftry>
		
		<!--- any error response? --->
		
		<cfset stReturn.stContent = DeSerializeJSON( local.stHTTP.fileContent ) />
		
		<cfreturn application.udf.SetReturnStructSuccessCode( local.stReturn ) />
		
	</cffunction>

</cfcomponent>